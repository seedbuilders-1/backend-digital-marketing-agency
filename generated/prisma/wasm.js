
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  tel: 'tel',
  country: 'country',
  address: 'address',
  category: 'category',
  pfp_url: 'pfp_url',
  id_url: 'id_url',
  business_status: 'business_status',
  password: 'password',
  status: 'status',
  role_id: 'role_id',
  created_at: 'created_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.OrganisationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  address: 'address',
  country: 'country',
  industry: 'industry',
  logo_url: 'logo_url',
  rc_number: 'rc_number',
  staff_size: 'staff_size',
  type: 'type',
  created_at: 'created_at',
  user_id: 'user_id',
  deleted_at: 'deleted_at'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  subtitle: 'subtitle',
  created_at: 'created_at',
  admin_id: 'admin_id',
  banner_url: 'banner_url',
  deleted_at: 'deleted_at'
};

exports.Prisma.Service_requestScalarFieldEnum = {
  id: 'id',
  message: 'message',
  service_id: 'service_id',
  user_id: 'user_id',
  requested_at: 'requested_at',
  status: 'status',
  plan_id: 'plan_id'
};

exports.Prisma.Case_studiesScalarFieldEnum = {
  id: 'id',
  banner: 'banner',
  challenge: 'challenge',
  challenge_img: 'challenge_img',
  solution: 'solution',
  solution_img: 'solution_img',
  result: 'result',
  result_img: 'result_img',
  service_id: 'service_id',
  organisation_id: 'organisation_id'
};

exports.Prisma.TestimonialScalarFieldEnum = {
  id: 'id',
  message: 'message',
  user_id: 'user_id',
  service_id: 'service_id',
  stars: 'stars',
  user_title: 'user_title',
  deleted_at: 'deleted_at'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  name: 'name',
  pfp_url: 'pfp_url',
  organisation_id: 'organisation_id',
  id_url: 'id_url',
  created_at: 'created_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.OtpScalarFieldEnum = {
  id: 'id',
  otp: 'otp',
  expires_at: 'expires_at',
  created_at: 'created_at',
  user_id: 'user_id'
};

exports.Prisma.Password_tokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  created_at: 'created_at',
  expires_at: 'expires_at',
  user_id: 'user_id'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  activity: 'activity',
  completed_at: 'completed_at',
  user_id: 'user_id'
};

exports.Prisma.Privacy_settingsScalarFieldEnum = {
  id: 'id',
  ads: 'ads',
  data_sharing: 'data_sharing',
  marketing_status: 'marketing_status',
  activity_status: 'activity_status',
  user_id: 'user_id'
};

exports.Prisma.Notification_settingsScalarFieldEnum = {
  id: 'id',
  alerts: 'alerts',
  messages: 'messages',
  updates: 'updates',
  billing_alerts: 'billing_alerts',
  email: 'email',
  in_app: 'in_app',
  user_id: 'user_id'
};

exports.Prisma.Plan_typeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  created_by: 'created_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.Billing_cycleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  duration_in_days: 'duration_in_days',
  created_at: 'created_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.PlanScalarFieldEnum = {
  id: 'id',
  service_id: 'service_id',
  plan_type_id: 'plan_type_id',
  billing_cycle_id: 'billing_cycle_id',
  price: 'price',
  description: 'description'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  start_date: 'start_date',
  end_date: 'end_date',
  status: 'status',
  user_id: 'user_id',
  plan_id: 'plan_id'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  created_at: 'created_at',
  created_by: 'created_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  tel: 'tel',
  country: 'country',
  address: 'address',
  category: 'category',
  pfp_url: 'pfp_url',
  password: 'password',
  status: 'status',
  role_id: 'role_id'
};

exports.Prisma.organisationOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  address: 'address',
  country: 'country',
  industry: 'industry',
  logo_url: 'logo_url',
  rc_number: 'rc_number',
  staff_size: 'staff_size',
  type: 'type',
  user_id: 'user_id'
};

exports.Prisma.serviceOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  subtitle: 'subtitle',
  admin_id: 'admin_id',
  banner_url: 'banner_url'
};

exports.Prisma.service_requestOrderByRelevanceFieldEnum = {
  id: 'id',
  message: 'message',
  service_id: 'service_id',
  user_id: 'user_id',
  status: 'status',
  plan_id: 'plan_id'
};

exports.Prisma.case_studiesOrderByRelevanceFieldEnum = {
  id: 'id',
  banner: 'banner',
  challenge: 'challenge',
  challenge_img: 'challenge_img',
  solution: 'solution',
  solution_img: 'solution_img',
  result: 'result',
  result_img: 'result_img',
  service_id: 'service_id',
  organisation_id: 'organisation_id'
};

exports.Prisma.testimonialOrderByRelevanceFieldEnum = {
  id: 'id',
  message: 'message',
  user_id: 'user_id',
  service_id: 'service_id',
  user_title: 'user_title'
};

exports.Prisma.contactOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  pfp_url: 'pfp_url',
  organisation_id: 'organisation_id'
};

exports.Prisma.otpOrderByRelevanceFieldEnum = {
  id: 'id',
  otp: 'otp',
  user_id: 'user_id'
};

exports.Prisma.password_tokenOrderByRelevanceFieldEnum = {
  id: 'id',
  token: 'token',
  user_id: 'user_id'
};

exports.Prisma.notificationOrderByRelevanceFieldEnum = {
  id: 'id',
  activity: 'activity',
  user_id: 'user_id'
};

exports.Prisma.privacy_settingsOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.notification_settingsOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.plan_typeOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  created_by: 'created_by'
};

exports.Prisma.billing_cycleOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.planOrderByRelevanceFieldEnum = {
  id: 'id',
  service_id: 'service_id',
  plan_type_id: 'plan_type_id',
  billing_cycle_id: 'billing_cycle_id',
  description: 'description'
};

exports.Prisma.subscriptionOrderByRelevanceFieldEnum = {
  id: 'id',
  status: 'status',
  user_id: 'user_id',
  plan_id: 'plan_id'
};

exports.Prisma.roleOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  created_by: 'created_by'
};


exports.Prisma.ModelName = {
  user: 'user',
  organisation: 'organisation',
  service: 'service',
  service_request: 'service_request',
  case_studies: 'case_studies',
  testimonial: 'testimonial',
  contact: 'contact',
  otp: 'otp',
  password_token: 'password_token',
  notification: 'notification',
  privacy_settings: 'privacy_settings',
  notification_settings: 'notification_settings',
  plan_type: 'plan_type',
  billing_cycle: 'billing_cycle',
  plan: 'plan',
  subscription: 'subscription',
  role: 'role'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
